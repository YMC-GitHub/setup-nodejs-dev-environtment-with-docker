#!/bin/sh

THIS_FILE_PATH=$(
  cd $(dirname $0)
  pwd
)

USAGE_MSG=$(
  cat <<EOF
###
# dev-using docker-cli
###
  build image and run container
    ./dev-start.sh
  then write you code and run some tasks,eg install deps.
    ./dev-task.sh
  delete docker container and image
    ./dev-delete.sh

###
# pro-using docker-cli
###
  build image and run container
    ./pro-start.sh
  then write you code and run some tasks
    ./pro-task.sh
  delete docker container and image
    ./pro-delete.sh

###
# about config
###
  the config 's key and val
    see detail in conf.sh
  the order of reading conf
    conf.sh->conf.txt->cli arg
  print the conf.sh val
    ./print_conf.sh
  print the conf.txt val
    ./print_conf_file.sh
EOF
)

GETOPT_ARGS_SHORT_RULE="--options h,d,"
GETOPT_ARGS_LONG_RULE="--long help,debug,conf:,project_path_in_phsyics:,project_path_in_vm:,deps_container_name:,program_languague_name:,program_languague_version:,os_name:,os_version:,codes_container_image_name:,codes_container_name:,nodejs_project_path_in_phsyics:,package_path:,source_dev_path_in_phsyics:,source_dev_path_in_vm:,source_test_path_in_phsyics:,source_test_path_in_vm:,source_dist_path_in_phsyics:,source_dist_path_in_vm:"
###
#设置参数规则
###
GETOPT_ARGS=$(
  getopt $GETOPT_ARGS_SHORT_RULE \
    $GETOPT_ARGS_LONG_RULE -- "$@"
)
###
#解析参数规则
###
eval set -- "$GETOPT_ARGS"
# below generated by write-sources.sh

while [ -n "$1" ]; do
  case $1 in
  --project_path_in_phsyics)
    arg_project_path_in_phsyics=$2
    shift 2
    ;;
  --conf)
    arg_conf=$2
    shift 2
    ;;
  --project_path_in_vm)
    arg_project_path_in_vm=$2
    shift 2
    ;;
  --deps_container_name)
    arg_deps_container_name=$2
    shift 2
    ;;
  --program_languague_name)
    arg_program_languague_name=$2
    shift 2
    ;;
  --program_languague_version)
    arg_program_languague_version=$2
    shift 2
    ;;
  --os_name)
    arg_os_name=$2
    shift 2
    ;;
  --os_version)
    arg_os_version=$2
    shift 2
    ;;
  --codes_container_image_name)
    arg_codes_container_image_name=$2
    shift 2
    ;;
  --codes_container_name)
    arg_codes_container_name=$2
    shift 2
    ;;
  --nodejs_project_path_in_phsyics)
    arg_nodejs_project_path_in_phsyics=$2
    shift 2
    ;;
  --package_path)
    arg_package_path=$2
    shift 2
    ;;
  --source_dev_path_in_phsyics)
    arg_source_dev_path_in_phsyics=$2
    shift 2
    ;;
  --source_dev_path_in_vm)
    arg_source_dev_path_in_vm=$2
    shift 2
    ;;
  --source_test_path_in_phsyics)
    arg_source_test_path_in_phsyics=$2
    shift 2
    ;;
  --source_test_path_in_vm)
    arg_source_test_path_in_vm=$2
    shift 2
    ;;
  --source_dist_path_in_phsyics)
    arg_source_dist_path_in_phsyics=$2
    shift 2
    ;;
  --source_dist_path_in_vm)
    arg_source_dist_path_in_vm=$2
    shift 2
    ;;
  -h | --help)
    echo "$USAGE_MSG"
    exit 1
    ;;
  -d | --debug)
    IS_DEBUG_MODE=true
    shift 2
    ;;
  --)
    break
    ;;
  *)
    printf "$USAGE_MSG"
    ;;
  esac
done

# 读取配置文件
source ${THIS_FILE_PATH}/read-config-file.sh

if [ -n "$arg_source_dist_path_in_vm" ]; then
  source_dist_path_in_vm="$arg_source_dist_path_in_vm"
fi
if [ -n "$arg_source_dist_path_in_phsyics" ]; then
  source_dist_path_in_phsyics="$arg_source_dist_path_in_phsyics"
fi
if [ -n "$arg_source_test_path_in_vm" ]; then
  source_test_path_in_vm="$arg_source_test_path_in_vm"
fi
if [ -n "$arg_source_test_path_in_phsyics" ]; then
  source_test_path_in_phsyics="$arg_source_test_path_in_phsyics"
fi
if [ -n "$arg_source_dev_path_in_vm" ]; then
  source_dev_path_in_vm="$arg_source_dev_path_in_vm"
fi
if [ -n "$arg_source_dev_path_in_phsyics" ]; then
  source_dev_path_in_phsyics="$arg_source_dev_path_in_phsyics"
fi
if [ -n "$arg_package_path" ]; then
  package_path="$arg_package_path"
fi
if [ -n "$arg_nodejs_project_path_in_phsyics" ]; then
  nodejs_project_path_in_phsyics="$arg_nodejs_project_path_in_phsyics"
fi
if [ -n "$arg_codes_container_name" ]; then
  codes_container_name="$arg_codes_container_name"
fi
if [ -n "$arg_codes_container_image_name" ]; then
  codes_container_image_name="$arg_codes_container_image_name"
fi
if [ -n "$arg_os_version" ]; then
  os_version="$arg_os_version"
fi
if [ -n "$arg_os_name" ]; then
  os_name="$arg_os_name"
fi
if [ -n "$arg_program_languague_version" ]; then
  program_languague_version="$arg_program_languague_version"
fi
if [ -n "$arg_program_languague_name" ]; then
  program_languague_name="$arg_program_languague_name"
fi
if [ -n "$arg_deps_container_name" ]; then
  deps_container_name="$arg_deps_container_name"
fi
if [ -n "$arg_project_path_in_vm" ]; then
  project_path_in_vm="$arg_project_path_in_vm"
fi
if [ -n "$arg_project_path_in_phsyics" ]; then
  project_path_in_phsyics="$arg_project_path_in_phsyics"
fi
